// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NWS_Weather.Data;

namespace NWS_Weather.Migrations
{
    [DbContext(typeof(NWS_WeatherContext))]
    [Migration("20200917100125_AddBlogCreatedTimestamp")]
    partial class AddBlogCreatedTimestamp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NWS_Weather.Models.Elevation", b =>
                {
                    b.Property<int>("elevationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("unitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.HasKey("elevationId");

                    b.ToTable("elevations");
                });

            modelBuilder.Entity("NWS_Weather.Models.Geometry", b =>
                {
                    b.Property<int>("geometryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("geometryId");

                    b.ToTable("geometries");
                });

            modelBuilder.Entity("NWS_Weather.Models.Period", b =>
                {
                    b.Property<int>("periodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detailedForecast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDaytime")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<int?>("propertiesId")
                        .HasColumnType("int");

                    b.Property<string>("shortForecast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("temperature")
                        .HasColumnType("int");

                    b.Property<string>("temperatureTrend")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperatureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("windDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("windSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("periodId");

                    b.HasIndex("propertiesId");

                    b.ToTable("periods");
                });

            modelBuilder.Entity("NWS_Weather.Models.Properties", b =>
                {
                    b.Property<int>("propertiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("elevationId")
                        .HasColumnType("int");

                    b.Property<string>("forecastGenerator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("generatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("validTimes")
                        .HasColumnType("datetime2");

                    b.HasKey("propertiesId");

                    b.HasIndex("elevationId");

                    b.ToTable("dbProperties");
                });

            modelBuilder.Entity("NWS_Weather.Models.Root", b =>
                {
                    b.Property<int>("rootId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("geometryId")
                        .HasColumnType("int");

                    b.Property<int?>("propertiesId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rootId");

                    b.HasIndex("geometryId");

                    b.HasIndex("propertiesId");

                    b.ToTable("roots");
                });

            modelBuilder.Entity("NWS_Weather.Models.Period", b =>
                {
                    b.HasOne("NWS_Weather.Models.Properties", null)
                        .WithMany("periods")
                        .HasForeignKey("propertiesId");
                });

            modelBuilder.Entity("NWS_Weather.Models.Properties", b =>
                {
                    b.HasOne("NWS_Weather.Models.Elevation", "elevation")
                        .WithMany()
                        .HasForeignKey("elevationId");
                });

            modelBuilder.Entity("NWS_Weather.Models.Root", b =>
                {
                    b.HasOne("NWS_Weather.Models.Geometry", "geometry")
                        .WithMany()
                        .HasForeignKey("geometryId");

                    b.HasOne("NWS_Weather.Models.Properties", "properties")
                        .WithMany()
                        .HasForeignKey("propertiesId");
                });
#pragma warning restore 612, 618
        }
    }
}
